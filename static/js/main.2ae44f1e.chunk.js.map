{"version":3,"sources":["components/Header.js","types/index.js","config/axios.js","actions/entradaActions.js","components/Entrada.js","components/Totalizador.js","components/Entradas.js","actions/alertaActions.js","components/NuevaEntrada.js","components/EditarEntrada.js","reducers/entradasReducer.js","reducers/alertaReducer.js","reducers/index.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","id","to","AGREGAR_ENTRADA","AGREGAR_ENTRADA_EXITO","AGREGAR_ENTRADA_ERROR","DESCARGA_INICIADA","DESCARGA_TERMINADA","DESCARGA_FALLIDA","OBTENER_ENTRADA_ELIMINAR","ENTRADA_ELIMINADA_OK","ENTRADA_ELIMINADA_FALLA","OBTENER_ENTRADA_EDITAR","ENTRADA_EDITADA_OK","ENTRADA_EDITADA_FALLA","MOSTRAR_ALERTA","OCULTAR_ALERTA","clienteAxios","axios","create","baseURL","agregarEntrada","type","payload","agregarEntradaExito","entrada","agregarEntradaError","estado","descargarEntradas","descargaEntradasOK","entradas","descargaEntradasFalla","obtenerEntradaEliminar","eliminarEntradaOK","eliminarEntradaFalla","obtenerEntradaEDAction","editarEntrada","editarEntradaOK","editarEntradaFalla","Entrada","nombre","potencia","uso","consumoE","dispatch","useDispatch","history","useHistory","confirmarEliminacion","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","a","delete","console","log","borrarEntradaAction","redireccionarEdicion","obtenerEntradaEditar","push","onClick","Totalizador","totalConsumo","forEach","elemento","indice","consumoSem","toFixed","consumoMes","consumoAnio","scope","Entradas","useEffect","get","respuesta","data","useSelector","state","error","cargando","loading","length","map","Date","getFullYear","doc","jsPDF","setFont","setFontSize","consumosRows","autoTable","startY","theme","styles","fontSize","headStyles","fillColor","head","body","foot","footStyles","textColor","previous","finalY","save","toISOString","crearAlerta","alerta","ocultarAlerta","NuevaEntrada","useState","setNombre","setPotencia","setUso","post","crearNEntradaAction","classes","msg","onSubmit","e","preventDefault","trim","mostrarAlerta","placeholder","name","value","onChange","target","Number","EditarEntrada","setEntrada","entradaeditar","onChangeFormulario","put","editarEntradaAction","initialState","entradaeliminar","combineReducers","action","filter","store","createStore","reducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ae44f1e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n    return (  \r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary bg-gradient justify-content-between\" id=\"hedernopdf\">\r\n            <div className=\"container\">\r\n                <h1>\r\n                    <Link to={'/'} className=\"text-light\">\r\n                        ELECTRO<span  className=\"logo\">NATURAL</span>\r\n                    </Link> \r\n                </h1>\r\n            </div>\r\n            <Link \r\n                to={\"/entradas/nueva\"}\r\n                className=\"btn btn-warning nuevo-post d-block de-md-inline-block\"\r\n            >Agregar un electrodoméstico &#43;</Link>\r\n        </nav>\r\n    );\r\n}\r\n \r\nexport default Header;","export const AGREGAR_ENTRADA  = 'AGREGAR_ENTRADA';\r\nexport const AGREGAR_ENTRADA_EXITO  = 'AGREGAR_ENTRADA_EXITO';\r\nexport const AGREGAR_ENTRADA_ERROR  = 'AGREGAR_ENTRADA_ERROR';\r\n\r\nexport const DESCARGA_INICIADA  = 'DESCARGA_INICIADA';\r\nexport const DESCARGA_TERMINADA  = 'DESCARGA_TERMINADA';\r\nexport const DESCARGA_FALLIDA  = 'DESCARGA_FALLIDA';\r\n\r\nexport const OBTENER_ENTRADA_ELIMINAR  = 'OBTENER_ENTRADA_ELIMINAR';\r\nexport const ENTRADA_ELIMINADA_OK  = 'ENTRADA_ELIMINADA_OK';\r\nexport const ENTRADA_ELIMINADA_FALLA  = 'ENTRADA_ELIMINADA_FALLA';\r\n\r\nexport const OBTENER_ENTRADA_EDITAR  = 'OBTENER_ENTRADA_EDITAR';\r\nexport const INICIAR_EDICION_ENTRADA  = 'INICIAR_EDICION_ENTRADA';\r\nexport const ENTRADA_EDITADA_OK  = 'ENTRADA_EDITADA_OK';\r\nexport const ENTRADA_EDITADA_FALLA  = 'ENTRADA_EDITADA_FALLA';\r\n\r\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\r\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';","import axios from 'axios';\r\n\r\nconst clienteAxios = axios.create({\r\n    baseURL: 'https://my-json-server.typicode.com/omelob/ClaculoConsumosDBJson/'\r\n});\r\n\r\nexport default clienteAxios;","import Swal from 'sweetalert2';\r\n\r\nimport {  \r\n    AGREGAR_ENTRADA,\r\n    AGREGAR_ENTRADA_EXITO,\r\n    AGREGAR_ENTRADA_ERROR,\r\n    DESCARGA_INICIADA,\r\n    DESCARGA_TERMINADA,\r\n    DESCARGA_FALLIDA,\r\n    OBTENER_ENTRADA_ELIMINAR,\r\n    ENTRADA_ELIMINADA_OK,\r\n    ENTRADA_ELIMINADA_FALLA,\r\n    OBTENER_ENTRADA_EDITAR,\r\n    INICIAR_EDICION_ENTRADA,\r\n    ENTRADA_EDITADA_OK,\r\n    ENTRADA_EDITADA_FALLA\r\n} from \"../types\";\r\nimport clienteAxios from '../config/axios';\r\n\r\n// crear nuevas entradas para calculo de consumo\r\nexport function crearNEntradaAction(entrada){\r\n    return async (dispatch) => {\r\n        dispatch( agregarEntrada());\r\n\r\n        try {\r\n            // insertar en la API\r\n            await clienteAxios.post('/entradas', entrada);\r\n\r\n            // si todo sale bien, se actualiza el state\r\n            dispatch( agregarEntradaExito(entrada));\r\n\r\n            // Alerta con sweetaler2\r\n            Swal.fire(\r\n                'Correcto',\r\n                'El consumo se agregó correctamente',\r\n                'success'\r\n            )\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n\r\n            // si hay un error, se cambia el state\r\n            dispatch( agregarEntradaError(true));\r\n\r\n            // alerta error\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Hubo un error',\r\n                text: 'Hubo un error, intenta de nuevo'\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nconst agregarEntrada = () => ({\r\n    type: AGREGAR_ENTRADA,\r\n    payload: true\r\n});\r\n\r\n// si el producto se guarda en la db\r\nconst agregarEntradaExito = entrada => ({\r\n    type: AGREGAR_ENTRADA_EXITO,\r\n    payload: entrada\r\n});\r\n\r\n// si hubo un error \r\nconst agregarEntradaError = estado => ({\r\n    type: AGREGAR_ENTRADA_ERROR,\r\n    payload: estado\r\n});\r\n\r\n// funcion que descarga las entradas de la db\r\nexport function obtenerEntradasAction(){\r\n    return async (dispatch) => {\r\n        dispatch( descargarEntradas() );\r\n\r\n        try {\r\n\r\n            const respuesta = await clienteAxios.get('/entradas');\r\n            dispatch( descargaEntradasOK(respuesta.data))\r\n            \r\n        } catch (error) {\r\n\r\n            console.log(error);\r\n            dispatch( descargaEntradasFalla())\r\n        }\r\n    }\r\n};\r\n\r\nconst descargarEntradas = () => ({\r\n    type: DESCARGA_INICIADA,\r\n    payload: true\r\n});\r\n\r\nconst descargaEntradasOK = entradas => ({\r\n    type: DESCARGA_TERMINADA,\r\n    payload: entradas\r\n});\r\n\r\nconst descargaEntradasFalla = () => ({\r\n    type: DESCARGA_FALLIDA,\r\n    payload: true\r\n});\r\n\r\n// selecciona y elimina la entrada\r\nexport function borrarEntradaAction(id){\r\n    return async (dispatch) => {\r\n        dispatch(obtenerEntradaEliminar(id));\r\n        \r\n        try {\r\n            await clienteAxios.delete(`/entradas/${id}`);\r\n            dispatch( eliminarEntradaOK())\r\n\r\n            // si se elimina, mostrar alerta codigo traido de entrada.js\r\n            Swal.fire(\r\n                'Eliminada!',\r\n                'La entrada ha sido eliminada.',\r\n                'success'\r\n            )\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch(eliminarEntradaFalla())\r\n        }\r\n    }\r\n}\r\n\r\nconst obtenerEntradaEliminar = id => ({\r\n    type: OBTENER_ENTRADA_ELIMINAR,\r\n    payload: id\r\n});\r\n\r\nconst eliminarEntradaOK = () => ({\r\n    type: ENTRADA_ELIMINADA_OK\r\n});\r\n\r\nconst eliminarEntradaFalla = () => ({\r\n    type: ENTRADA_ELIMINADA_FALLA,\r\n    payload: true\r\n});\r\n\r\n// colocar entrada en edicion\r\nexport function obtenerEntradaEditar(entrada){\r\n    return (dispatch) => {\r\n        dispatch( obtenerEntradaEDAction(entrada) )\r\n    }\r\n};\r\n\r\nconst obtenerEntradaEDAction = entrada => ({\r\n    type: OBTENER_ENTRADA_EDITAR,\r\n    payload: entrada\r\n});\r\n\r\n// edita un registro en la api y en el state\r\nexport function editarEntradaAction(entrada){\r\n    return async (dispatch) => {\r\n        dispatch( editarEntrada());\r\n\r\n        try {\r\n            await clienteAxios.put(`/entradas/${entrada.id}`, entrada);\r\n            dispatch( editarEntradaOK(entrada));\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch( editarEntradaFalla());\r\n        }\r\n    }\r\n};\r\n\r\nconst editarEntrada = () => ({\r\n    type: INICIAR_EDICION_ENTRADA\r\n});\r\n\r\nconst editarEntradaOK = entrada => ({\r\n    type: ENTRADA_EDITADA_OK,\r\n    payload: entrada\r\n});\r\n\r\nconst editarEntradaFalla = () => ({\r\n    type: ENTRADA_EDITADA_FALLA,\r\n    payload: true\r\n})\r\n","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Swal from 'sweetalert2';\r\n\r\n// Redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { borrarEntradaAction, obtenerEntradaEditar } from '../actions/entradaActions';\r\n\r\nconst Entrada = ({entrada}) => {\r\n    const { nombre, potencia, uso, consumoE, id } = entrada;\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory(); // habilita history para redireccion\r\n\r\n    // cofirmar eliminacion\r\n    const confirmarEliminacion = id => {\r\n\r\n        // preguntar al usuario (https://sweetalert2.github.io/)\r\n        Swal.fire({\r\n            title: 'Está seguro?',\r\n            text: \"No es posible revertir esta acción\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Si, Eliminar!',\r\n            cancelButtonText: 'Cancelar'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n\r\n                // pasar la entrada al action\r\n                dispatch(borrarEntradaAction(id));\r\n                \r\n            }\r\n        })        \r\n    }\r\n\r\n    // funcion que redirige de forma programada\r\n    const redireccionarEdicion = entrada => {\r\n        dispatch( obtenerEntradaEditar(entrada));\r\n        history.push(`/entradas/editar/${entrada.id}`)\r\n    }\r\n\r\n    return (  \r\n        <tr>\r\n            <td>{nombre}</td>\r\n            <td>{potencia} Watts</td>\r\n            <td>{uso} Horas</td>\r\n            <td>{consumoE} Watts hora</td>\r\n            <td className=\"acciones\">\r\n                <button \r\n                    type=\"button\"\r\n                    onClick={ () => redireccionarEdicion(entrada)}\r\n                    className=\"btn btn-primary mr-2\"\r\n                >Editar\r\n                </button>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-danger\"\r\n                    onClick={() => confirmarEliminacion(id)}\r\n                >Eliminar</button>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n \r\nexport default Entrada;","import React from 'react';\r\n\r\nconst Totalizador = ({entradas}) => {\r\n\r\n    //console.log(entradas);\r\n    let totalConsumo = 0;\r\n    entradas.forEach(function(elemento, indice){\r\n        totalConsumo += elemento['consumoE'];\r\n    });\r\n    //console.log(totalConsumo);\r\n    const consumoSem = (totalConsumo*7/1000).toFixed(2);\r\n    const consumoMes = (totalConsumo*30/1000).toFixed(2);\r\n    const consumoAnio = (consumoMes*12).toFixed(2);\r\n    return (  \r\n        <>\r\n            <h2>Resumen de Datos</h2>\r\n            \r\n            <table className=\"table teble-striped\">\r\n                <thead className=\"bg-primary table-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">Consumo Total Diario en Wh</th>\r\n                        <th scope=\"col\">Consumo Semanal promedio kWh</th>\r\n                        <th scope=\"col\">Consumo Mensual promedio kWh</th>\r\n                        <th scope=\"col\">Consumo Anual promedio kWh</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{totalConsumo} Watts hora</td>\r\n                        <td>{consumoSem} kWatts hora</td>\r\n                        <td>{consumoMes} kWatts hora</td>\r\n                        <td>{consumoAnio} kWatts hora</td>            \r\n                    </tr>\r\n                </tbody>\r\n                <tfoot className=\"bg-primary table-light\">\r\n                    <tr>\r\n                        <td>Suma de consumos diarios</td>\r\n                        <td>(Consumo Diario X 7)/1000</td>\r\n                        <td>(Consumo Diario X 30)/1000</td>\r\n                        <td>Consumo Mensual X 12</td>\r\n                    </tr>\r\n                </tfoot>  \r\n            </table>            \r\n        </>\r\n    );\r\n}\r\n \r\nexport default Totalizador;","import React, { useEffect } from 'react';\r\nimport { jsPDF } from \"jspdf\";\r\nimport 'jspdf-autotable';\r\n\r\nimport Entrada from './Entrada';\r\nimport Totalizador from './Totalizador';\r\n\r\n// redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { obtenerEntradasAction } from \"../actions/entradaActions\";\r\n\r\n\r\n\r\nconst Entradas = () => {\r\n\r\n    \r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        // consultar la API\r\n        const cargarEntradas = () => dispatch( obtenerEntradasAction() );\r\n\r\n        cargarEntradas();\r\n       // eslint-disable-next-line \r\n    }, []);\r\n\r\n    // obtener el state\r\n    const entradas = useSelector( state => state.entradas.entradas );\r\n    const error = useSelector(state => state.entradas.error );\r\n    const cargando = useSelector(state => state.entradas.loading);\r\n\r\n    \r\n    \r\n    // Crear PDF \r\n    const printPDF = () => {\r\n        \r\n        // Create a new jsPDF instance\r\n        const doc = new jsPDF(\"p\", \"pt\", \"a4\"); // default values\r\n        // set font\r\n        doc.setFont(\"helvetica\", \"bold\");\r\n\r\n        // font size\r\n        doc.setFontSize(20);\r\n\r\n        // title, centered around x\r\n        // doc.text(text, x, y, flags, angle, align);\r\n        doc.text(\r\n        \"Mi Tabla de Consumos Eléctricos\",\r\n        105 * 2.83,\r\n        20 * 2.83,\r\n        null,\r\n        null,\r\n        \"center\"\r\n        );\r\n\r\n        // Table 1\r\n        const consumosCol = [\"Nombre Electrodoméstico\", \"Potencia en Watts\", \"Tiempo de uso diario en horas\", \"Consumo en Watts-hora\"];\r\n\r\n        const consumosRows = entradas.map(entrada => {\r\n            const row = [entrada.nombre, entrada.potencia, entrada.uso, entrada.consumoE];\r\n            return row;\r\n        });\r\n\r\n        // const startY = 10 * 2.83;\r\n        const startY = 30 * 2.83;\r\n        doc.autoTable(consumosCol, consumosRows, {\r\n            // startY: 180 * 2.83,\r\n            startY,\r\n            theme: \"striped\",\r\n            styles: {\r\n            fontSize: 11\r\n            },\r\n            headStyles: {\r\n                fillColor: [56, 41, 51],\r\n                fontSize: 11,\r\n            },\r\n        });\r\n\r\n        // Tabla 2\r\n        let totalConsumo = 0;\r\n        entradas.forEach(function(elemento, indice){\r\n        totalConsumo += elemento['consumoE'];\r\n        });\r\n        //console.log(totalConsumo);\r\n        const consumoSem = (totalConsumo*7/1000).toFixed(2);\r\n        const consumoMes = (totalConsumo*30/1000).toFixed(2);\r\n        const consumoAnio = (consumoMes*12).toFixed(2);\r\n\r\n        \r\n        //const start2Y = 80 * 2.83;\r\n\r\n        doc.autoTable({\r\n\r\n            head: [[\"Consumo Diario\", \"Consumo Semanal\", \"Consumo Mensual\", \"Consumo Anual\"]],\r\n\r\n            body: [[totalConsumo +\" Wh\", consumoSem +\" kWh\", consumoMes +\" kWh\", consumoAnio +\" kWh\"]],\r\n            foot: [[\"Suma de consumos diarios\", \"(Consumo Diario X 7)/1000\", \"(Consumo Diario X 30)/1000\", \"Consumo Mensual X 12\"]],\r\n\r\n            headStyles: {\r\n                fillColor: [59, 82, 73],\r\n                fontSize: 11,\r\n            },\r\n            footStyles: {\r\n                fillColor: [164, 180, 148],\r\n                fontSize: 9,\r\n                textColor: 68,\r\n            },\r\n            \r\n            theme: \"grid\",\r\n            styles: {\r\n            fontSize: 11\r\n            }\r\n        });\r\n        \r\n\r\n        \r\n        doc.setFontSize(7);\r\n        doc.text(\r\n            `ELECTRONATURAL ©${new Date().getFullYear()} All rights reserved`,\r\n            142 * 2.83,\r\n\r\n            doc.autoTable.previous.finalY + 22\r\n        );\r\n\r\n        doc.save(`Mi_consumo_${new Date().toISOString()}.pdf`);\r\n        \r\n        \r\n       \r\n    };\r\n\r\n    return (  \r\n        < ><div id=\"content\">\r\n            <h2>Cálculo de Consumos Eléctricos Diarios</h2>\r\n            { error ? <p className=\"font-weight-bold alert alert-danger text-center mt-4\">Hubo un error</p> : null}\r\n            { cargando ? <p className=\"text-center\">Cargando...</p> : null}\r\n            <table className=\"table teble-striped\" id=\"losconsumos\">\r\n                <thead className=\"bg-primary table-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">Nombre Electrodoméstico</th>\r\n                        <th scope=\"col\">Potencia en Watts</th>\r\n                        <th scope=\"col\">Tiempo de uso diario en horas</th>\r\n                        <th scope=\"col\">Consumo en Watts-hora</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    { entradas.length === 0 ? 'No hay Entradas' : (\r\n                        entradas.map( entrada =>(\r\n                            <Entrada \r\n                                key={entrada.id}\r\n                                entrada={entrada}\r\n                            />\r\n                        ))\r\n                    )}\r\n                </tbody>   \r\n            </table>\r\n            <div>\r\n                <Totalizador \r\n                    entradas={entradas}\r\n                />\r\n            </div>\r\n            <h6 className=\"enaturalDR\">ELECTRONATURAL ©{new Date().getFullYear()} All rights reserved</h6>\r\n            </div>\r\n            <button\r\n                    type=\"button\"\r\n                    id=\"notpdf\"\r\n                    className=\"btn btn-success\"\r\n                    onClick={printPDF}\r\n                >Descargar esta Información en PDF</button>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default Entradas;","import {\r\n    MOSTRAR_ALERTA,\r\n    OCULTAR_ALERTA\r\n} from '../types';\r\n\r\n// Muestra alerta\r\nexport function mostrarAlerta(alerta){\r\n    return (dispatch) => {\r\n        dispatch(crearAlerta(alerta))\r\n    }\r\n}\r\n\r\nconst crearAlerta = alerta => ({\r\n    type: MOSTRAR_ALERTA,\r\n    payload: alerta\r\n});\r\n\r\n// ocultar la alerta\r\nexport function ocultarAlertaAction(){\r\n    return(dispatch) => {\r\n        dispatch(ocultarAlerta())\r\n    }\r\n}\r\n\r\nconst ocultarAlerta = () => ({\r\n    type: OCULTAR_ALERTA\r\n})","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Actions de Redux\r\nimport { crearNEntradaAction } from \"../actions/entradaActions\";\r\nimport { mostrarAlerta, ocultarAlertaAction } from \"../actions/alertaActions\";\r\n\r\nconst NuevaEntrada = ({history}) => {\r\n\r\n    // state del componente\r\n    const [nombre, setNombre] = useState('');\r\n    const [potencia, setPotencia] = useState(0);\r\n    const [uso, setUso] = useState(0);\r\n    \r\n\r\n    // utilizar useDispatch la cual devuelve una funcion\r\n    const dispatch = useDispatch();\r\n\r\n    // acceder al state del store con useSelector\r\n    const cargando = useSelector( state => state.entradas.loading);\r\n    const error = useSelector( state => state.entradas.error);\r\n    const alerta = useSelector(state => state.alerta.alerta);\r\n    \r\n    // mandar llamar el action de entradaAction\r\n    const agregarEntrada = (entrada) => dispatch( crearNEntradaAction(entrada));\r\n\r\n    //cuando el usuario hace submit\r\n    const submitNuevaEntrada = e => {\r\n\r\n        e.preventDefault();\r\n\r\n        // se valida el formulario\r\n        if (nombre.trim() === '' || potencia <=0 || uso <= 0) {\r\n\r\n            const alerta = {\r\n                msg: 'Todos los campos son obligatorios',\r\n                classes: 'alert alert-danger text-center text-uppercase p3'\r\n            }\r\n            dispatch(mostrarAlerta(alerta));\r\n            return;\r\n        }\r\n        \r\n        \r\n        // se verifica que no hay errores\r\n        dispatch(ocultarAlertaAction());\r\n\r\n        // se crea la nueva entrada de consumos\r\n        \r\n        agregarEntrada({\r\n            nombre,\r\n            potencia,\r\n            uso,\r\n            consumoE: potencia*uso\r\n        });\r\n\r\n        // reireccionar\r\n        history.push('/');\r\n    }\r\n\r\n    return (  \r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-8\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h2 className=\"text-center mb-4 font-weight-bold\">Ingrese los datos para un nuevo cálculo</h2>\r\n                        {alerta ? <p className={alerta.classes}>{alerta.msg}</p> : null}\r\n                        <form\r\n                            onSubmit={submitNuevaEntrada}\r\n                        >\r\n                            <div className=\"form-group\">\r\n                                <label>Nombre Electrodoméstico</label>\r\n                                <input \r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Nombre Electrodoméstico\"\r\n                                    name=\"nombre\"\r\n                                    value={nombre}\r\n                                    onChange={e => setNombre(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Potencia en Watts</label>\r\n                                <input \r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Potencia en Watts\"\r\n                                    name=\"potencia\"\r\n                                    value={potencia}\r\n                                    onChange={e => setPotencia(Number(e.target.value))}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Uso diario en horas</label>\r\n                                <input \r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Uso diario en horas\"\r\n                                    name=\"uso\"\r\n                                    value={uso}\r\n                                    onChange={e => setUso(Number(e.target.value))}\r\n                                />\r\n                            </div>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\"\r\n                            >Agregar                           \r\n                            </button>\r\n                        </form>\r\n                        {cargando ? <p>Cargando...</p> : null}\r\n                        {error ? <p className=\"alert alert-danger p2 mt-4 text-center\">Hubo un Error</p> : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default NuevaEntrada;","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { editarEntradaAction } from \"../actions/entradaActions\";\r\n\r\nconst EditarEntrada = () => {\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    // state para recibir los datos modificados    \r\n    const [entrada, setEntrada] = useState({\r\n        nombre: '',\r\n        potencia: 0,\r\n        uso: 0,\r\n        consumoE: 0\r\n    })\r\n    \r\n    // entrada a editar\r\n    const entradaeditar = useSelector(state => state.entradas.entradaeditar);\r\n    //if(!entrada) return null;\r\n    const { nombre, potencia, uso } = entrada;\r\n    //console.log(entrada);\r\n    //console.log(entradaeditar);\r\n\r\n    // llenar el state automaticamente\r\n    useEffect(() => {\r\n        \r\n        setEntrada(entradaeditar);\r\n        \r\n    }, [entradaeditar])\r\n\r\n    // leer los datos del formulario\r\n    const onChangeFormulario = e => {\r\n        \r\n        setEntrada({\r\n            ...entrada,\r\n            [e.target.name] : e.target.value\r\n            \r\n        });\r\n        \r\n        \r\n    }\r\n\r\n    const submitEditarEntrada = e => {\r\n        e.preventDefault();\r\n        \r\n        const {potencia, uso} = entrada;\r\n        \r\n        entrada.consumoE = potencia*uso;\r\n        \r\n        dispatch(editarEntradaAction(entrada));\r\n\r\n        history.push('/');\r\n    }\r\n\r\n    return (  \r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-8\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h2 className=\"text-center mb-4 font-weight-bold\">Editar Datos</h2>\r\n                        <form\r\n                            onSubmit={submitEditarEntrada}\r\n                        >\r\n                            <div className=\"form-group\">\r\n                                <label>Nombre Electrodoméstico</label>\r\n                                <input \r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Nombre Electrodoméstico\"\r\n                                    name=\"nombre\"\r\n                                    value={nombre}\r\n                                    onChange={onChangeFormulario}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Potencia en Watts</label>\r\n                                <input \r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Potencia en Watts\"\r\n                                    name=\"potencia\"\r\n                                    value={potencia}\r\n                                    onChange={onChangeFormulario}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Uso diario en horas</label>\r\n                                <input \r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Uso diario en horas\"\r\n                                    name=\"uso\"\r\n                                    value={uso}\r\n                                    onChange={onChangeFormulario}\r\n                                />\r\n                            </div>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\"\r\n                            >Guardar Cambios                           \r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default EditarEntrada;","import {  \r\n    AGREGAR_ENTRADA,\r\n    AGREGAR_ENTRADA_EXITO,\r\n    AGREGAR_ENTRADA_ERROR,\r\n    DESCARGA_INICIADA,\r\n    DESCARGA_TERMINADA,\r\n    DESCARGA_FALLIDA,\r\n    OBTENER_ENTRADA_ELIMINAR,\r\n    ENTRADA_ELIMINADA_OK,\r\n    ENTRADA_ELIMINADA_FALLA,\r\n    OBTENER_ENTRADA_EDITAR,\r\n    ENTRADA_EDITADA_OK,\r\n    ENTRADA_EDITADA_FALLA\r\n} from \"../types\";\r\n\r\n// cada reducer tiene su propio state\r\nconst initialState = {\r\n    entradas: [],\r\n    error: null,\r\n    loading: false,\r\n    entradaeliminar: null,\r\n    entradaeditar: null\r\n}\r\n\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowAnonymousFunction\": true}] */\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case AGREGAR_ENTRADA:\r\n        case DESCARGA_INICIADA:\r\n            return{\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n        case AGREGAR_ENTRADA_EXITO:\r\n            return{\r\n                ...state,\r\n                loading: false,\r\n                entradas: [...state.entradas, action.payload]\r\n            }\r\n        case AGREGAR_ENTRADA_ERROR:\r\n        case DESCARGA_FALLIDA:\r\n        case ENTRADA_ELIMINADA_FALLA:\r\n        case ENTRADA_EDITADA_FALLA:\r\n            return{\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case DESCARGA_TERMINADA:\r\n            return{\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                entradas: action.payload\r\n            }\r\n        case OBTENER_ENTRADA_ELIMINAR:\r\n            return{\r\n                ...state,\r\n                entradaeliminar: action.payload\r\n            }\r\n        case ENTRADA_ELIMINADA_OK:\r\n            return{\r\n                ...state,\r\n                entradas: state.entradas.filter( entrada => entrada.id !== state.entradaeliminar),\r\n                entradaeliminar: null\r\n            }\r\n        case OBTENER_ENTRADA_EDITAR:\r\n            return{\r\n                ...state,\r\n                entradaeditar: action.payload\r\n            }\r\n        case ENTRADA_EDITADA_OK:\r\n            return{\r\n                ...state,\r\n                entradaeditar: null,\r\n                entradas: state.entradas.map( entrada => \r\n                    entrada.id === action.payload.id ? entrada = action.payload : entrada\r\n                )\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    MOSTRAR_ALERTA,\r\n    OCULTAR_ALERTA\r\n} from '../types';\r\n\r\n// cada reducer tiene su state\r\nconst initialState = {\r\n    alerta: null\r\n}\r\n\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowAnonymousFunction\": true}] */\r\nexport default function(state = initialState, action){\r\n    switch (action.type) {\r\n        case MOSTRAR_ALERTA:\r\n            return{\r\n                ...state,\r\n                alerta: action.payload\r\n            }\r\n        case OCULTAR_ALERTA:\r\n            return{\r\n                ...state,\r\n                alerta: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\n\r\nimport entradasReducer from './entradasReducer';\r\nimport alertaReducer from './alertaReducer';\r\n\r\nexport default combineReducers({\r\n    entradas: entradasReducer,\r\n    alerta: alertaReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducer from './reducers';\r\n\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    compose( applyMiddleware(thunk),\r\n\r\n        typeof window === 'object' &&\r\n            typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ?\r\n            window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\r\n    )\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Header from './components/Header';\nimport Entradas from './components/Entradas';\nimport NuevaEntrada from './components/NuevaEntrada';\nimport EditarEntrada from './components/EditarEntrada';\n\n// Redux\nimport { Provider } from \"react-redux\";\nimport store from './store';\n\nfunction App() {\n  return (\n    <Router>\n    <Provider store={store} >\n      <Header />\n      <div className=\"container mt-5\" >\n        <Switch>\n          <Route exact path=\"/\" component={Entradas} />\n          <Route exact path=\"/entradas/nueva\" component={NuevaEntrada} />\n          <Route exact path=\"/entradas/editar/:id\" component={EditarEntrada} />\n        </Switch>\n      </div>\n    </Provider>    \n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}